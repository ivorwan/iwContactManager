@*@model iwContactManager.Models.Validators.AValidator*@
@model iwContactManager.ViewModels.ValidatorViewModel


@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>AValidator</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.aValidator.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.aValidator.ListID, "ListID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.aValidator.ListID, iwContactManager.Utilities.ListUtility.GetListIDSelectList(Model.aValidator.ListID), String.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.aValidator.ListID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.aValidator.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.aValidator.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.aValidator.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.aValidator.ValueToValidate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.aValidator.ValueToValidate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.aValidator.ValueToValidate, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="hidden" name="ValidatorType" value="@Model.ValidatorType" />
        
        
        @{
            string partialViewName = String.Format("_{0}Dynamic", @Model.ValidatorType);
        }
        @Html.Partial(partialViewName, Model.aValidator, new ViewDataDictionary { TemplateInfo = new System.Web.Mvc.TemplateInfo { HtmlFieldPrefix = "aValidator" } })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
